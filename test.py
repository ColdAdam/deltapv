import unittest
import jaxpv
from jax import numpy as np

L = 3e-4
grid = np.linspace(0, L, 500)
design = jaxpv.simulator.create_design(grid)
material = jaxpv.materials.create_material(Chi=3.9,
                                           Eg=1.5,
                                           eps=9.4,
                                           Nc=8e17,
                                           Nv=1.8e19,
                                           mn=100,
                                           mp=100,
                                           Et=0,
                                           tn=1e-8,
                                           tp=1e-8,
                                           A=1e4)
design = jaxpv.simulator.add_material(design, material, lambda x: True)
design = jaxpv.simulator.contacts(design, 1e7, 0, 0, 1e7)
design = jaxpv.simulator.single_pn_junction(design, 1e17, -1e15, 50e-7)
ls = jaxpv.simulator.incident_light()


class TestJAXPV(unittest.TestCase):
    def test_iv(self):

        results = jaxpv.simulator.simulate(design, ls)
        v, j = results["iv"]

        v_correct = [
            0.0, 0.02, 0.04, 0.060000000000000005, 0.08, 0.09999999999999999,
            0.12000000000000001, 0.14, 0.16, 0.18, 0.19999999999999998, 0.22,
            0.24000000000000002, 0.26, 0.28, 0.3, 0.32, 0.34, 0.36, 0.38,
            0.39999999999999997, 0.42000000000000004, 0.44,
            0.45999999999999996, 0.48000000000000004, 0.5, 0.52,
            0.5399999999999999, 0.56, 0.58, 0.6, 0.62, 0.64, 0.66, 0.68,
            0.7000000000000001, 0.72, 0.7400000000000001, 0.76, 0.78,
            0.7999999999999999, 0.8200000000000001, 0.8400000000000001,
            0.8600000000000001, 0.88, 0.9, 0.9199999999999999, 0.94
        ]

        j_correct = [
            0.01882799450659129, 0.01879856765176576, 0.018768580333567143,
            0.018738014811363984, 0.018706852356731047, 0.018675073222852775,
            0.018642656734894902, 0.018609580956954253, 0.018575822782358108,
            0.01854135782736367, 0.01850616015841796, 0.018470202397501235,
            0.01843345541902536, 0.01839588830382045, 0.018357468020730842,
            0.018318159501526814, 0.018277925065090066, 0.018236724477023198,
            0.018194514388699547, 0.018151248063680098, 0.018106874740686674,
            0.018061338905457577, 0.018014579077777513, 0.017966525886300575,
            0.017917099203650515, 0.01786620320549678, 0.017813718746720275,
            0.017759491266009782, 0.01770331267154145, 0.01764489408403717,
            0.017583825887487907, 0.01751951786925197, 0.017451107166260197,
            0.017377313529106132, 0.01729620637092025, 0.017204823920097177,
            0.017098539474066653, 0.016969987127703465, 0.016807200425042246,
            0.016590311609289348, 0.01628556057166174, 0.01583417006655876,
            0.015131262198710594, 0.013985205002644496, 0.01203822176066329,
            0.008610345694182748, 0.0023935909445044873, -0.009136607543454842
        ]

        self.assertTrue(np.allclose(v, v_correct), "Voltages do not match!")
        self.assertTrue(np.allclose(j, j_correct), "Currents do not match!")


if __name__ == '__main__':
    unittest.main()
