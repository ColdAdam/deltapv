import unittest
import jaxpv
from jax import numpy as np

L = 3e-4
grid = np.linspace(0, L, 500)
cell = jaxpv.simulator.create_cell(grid)
material = jaxpv.materials.create_material(Chi=3.9,
                                           Eg=1.5,
                                           eps=9.4,
                                           Nc=8e17,
                                           Nv=1.8e19,
                                           mn=100,
                                           mp=100,
                                           Et=0,
                                           tn=1e-8,
                                           tp=1e-8,
                                           A=1e4)
cell = jaxpv.simulator.add_material(cell, material, lambda x: True)
cell = jaxpv.simulator.contacts(cell, 1e7, 0, 0, 1e7)
cell = jaxpv.simulator.single_pn_junction(cell, 1e17, -1e15, 50e-7)


class TestJAXPV(unittest.TestCase):
    def test_iv(self):

        ls = jaxpv.simulator.incident_light()
        v, j = jaxpv.simulator.iv_curve(cell, ls)

        v_correct = [
            0.0, 0.02385882199287483, 0.04771764398574966, 0.07157646597862448,
            0.09543528797149932, 0.11929410996437415, 0.14315293195724896,
            0.1670117539501238, 0.19087057594299864, 0.21472939793587345,
            0.2385882199287483, 0.2624470419216231, 0.2863058639144979,
            0.3101646859073728, 0.3340235079002476, 0.3578823298931224,
            0.3817411518859973, 0.4055999738788721, 0.4294587958717469,
            0.45331761786462177, 0.4771764398574966, 0.5010352618503714,
            0.5248940838432462, 0.548752905836121, 0.5726117278289958,
            0.5964705498218708, 0.6203293718147456
        ]

        j_correct = [
            1.0542663641677582e-05, 1.054004432002233e-05,
            1.053734651862992e-05, 1.0534494623040321e-05,
            1.0531549081188675e-05, 1.0528449383290128e-05,
            1.0525119873577099e-05, 1.0521560495250588e-05,
            1.051760479841357e-05, 1.051311652894042e-05,
            1.0507792960063945e-05, 1.050116481723714e-05,
            1.0492490278375705e-05, 1.0480542982591286e-05,
            1.046341506026371e-05, 1.0437971924921247e-05,
            1.039912512316864e-05, 1.0338696047065337e-05,
            1.0243279785131078e-05, 1.0091123636554666e-05,
            9.846762818062418e-06, 9.452185297413967e-06, 8.81235780230008e-06,
            7.771186494602175e-06, 6.071347264192148e-06,
            3.287022649198452e-06, -1.2903036594973483e-06
        ]

        self.assertTrue(np.allclose(v, v_correct), "Voltages do not match!")
        self.assertTrue(np.allclose(j, j_correct), "Currents do not match!")

    def test_iv_custom(self):

        phi = 1e17
        alpha = 2.3e4
        G = phi * alpha * np.exp(-alpha * grid)
        cell_custom = jaxpv.simulator.custom_generation(cell, G)
        v, j = jaxpv.simulator.iv_curve(cell_custom)

        v_correct = np.array([
            0.0, 0.02385882199287483, 0.04771764398574966, 0.07157646597862448,
            0.09543528797149932, 0.11929410996437415, 0.14315293195724896,
            0.1670117539501238, 0.19087057594299864, 0.21472939793587345,
            0.2385882199287483, 0.2624470419216231, 0.2863058639144979,
            0.3101646859073728, 0.3340235079002476, 0.3578823298931224,
            0.3817411518859973, 0.4055999738788721, 0.4294587958717469,
            0.45331761786462177, 0.4771764398574966, 0.5010352618503714,
            0.5248940838432462, 0.548752905836121, 0.5726117278289958,
            0.5964705498218708, 0.6203293718147456, 0.6441881938076204,
            0.6680470158004952, 0.69190583779337, 0.7157646597862448,
            0.7396234817791196, 0.7634823037719946, 0.7873411257648694,
            0.8111999477577442, 0.835058769750619, 0.8589175917434938,
            0.8827764137363686, 0.9066352357292435, 0.9304940577221184
        ])

        j_correct = np.array([
            0.015652402997701306, 0.015645423005931948, 0.015638162637322407,
            0.015630606282050978, 0.01562273720595168, 0.015614537262702914,
            0.0156059869537124, 0.015597065094781717, 0.015587748800253083,
            0.015578013255359667, 0.015567831322033814, 0.015557173477386445,
            0.015546007434381604, 0.015534297732050261, 0.015522005234680038,
            0.015509086676154684, 0.015495493689382708, 0.015481171744383652,
            0.015466058162264928, 0.015450078962248927, 0.015433143178166577,
            0.015415133310157534, 0.015395888304544659, 0.015375175664382176,
            0.015352646155130571, 0.015327761141570561, 0.015299674176383357,
            0.015267032310953, 0.015227632540654623, 0.015177814406848735,
            0.015111361904884818, 0.015017465921741023, 0.01487683025685261,
            0.014653981009585282, 0.014281562968659194, 0.013627244384638523,
            0.012422028007497043, 0.010101693510230915, 0.00545220865293917,
            -0.004179675509758945
        ])

        self.assertTrue(np.allclose(v, v_correct), "Voltages do not match!")
        self.assertTrue(np.allclose(j, j_correct), "Currents do not match!")


if __name__ == '__main__':
    unittest.main()
